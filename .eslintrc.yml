---
  extends: airbnb-typescript
  parser: '@typescript-eslint/parser'
  parserOptions:
    ecmaVersion: 6
    sourceType: module
    project: ./tsconfig.json
  settings:
    import/resolver:
      alias: {
        map: [
          ['@client', './src/client/'],
          ['@server', './src/server/'],
          ['@scrapper', './src/server/modules/importer/modules/scrapper'],
          ['@sites', './src/server/modules/importer/sites'],
          ['@shared', './src/shared/'],
          ['@tasks', './src/tasks/'],
          ['@assets', './assets/'],
        ],
        extensions: ['.js', '.test.ts', '.ts', '.tsx', '.scss', '.json']
      }
  env:
    node: true
    mocha: true

  plugins:
    - '@typescript-eslint'
    - react-hooks

  rules:
    max-len: ["error", 120]

    no-use-before-define: "off"
    '@typescript-eslint/no-use-before-define': ["error"]
    '@typescript-eslint/lines-between-class-members': 0

    quotes: ["error", "single"]
    import/no-default-export: 2
    import/prefer-default-export: "off"
    react/static-property-placement: ["warn", "static public field", {
      childContextTypes: "static getter",
      contextTypes: "static public field",
      contextType: "static public field",
      displayName: "static public field",
    }]
    object-property-newline: 0
    lines-between-class-members: 0
    max-classes-per-file: 0
    spaced-comment: 0
    react-hooks/rules-of-hooks: "error"
    nonblock-statement-body-position: 0
    class-methods-use-this: 0
    jsx-quotes: ["error", "prefer-single"]
    jsx-a11y/no-static-element-interactions: 0
    jsx-a11y/label-has-for: 0
    jsx-a11y/href-no-hash: 0
    jsx-a11y/anchor-is-valid: ["warn", {"aspects": ["invalidHref"]}]
    jsx-a11y/click-events-have-key-events: 0
    jsx-a11y/mouse-events-have-key-events: 0
    object-curly-spacing: ["error", "never"]
    function-paren-newline: 0
    object-curly-newline: 0
    one-var: 0
    no-await-in-loop: 0
    vars-on-top: 0
    curly: 0
    one-var-declaration-per-line: 0
    import/no-extraneous-dependencies: 0
    import/extensions: 0
    import/no-cycle: 0
    global-require: 0
    new-parens: 0
    guard-for-in: 0
    no-restricted-syntax: 0
    no-continue: 0
    no-param-reassign: 0
    no-bitwise: 0
    no-plusplus: 0
    no-underscore-dangle: 0
    no-console: [2, {"allow": ["warn", "error", "info"]}]
    no-unused-expressions: ["error", {"allowTaggedTemplates": true, "allowShortCircuit": true}]
    react/destructuring-assignment: 0
    react/forbid-prop-types: 0
    react/prefer-stateless-function: [1, {"ignorePureComponents": true}]
    camelcase: ["error", {allow: ["^UNSAFE_"], properties: "never"}]
    react/no-unused-state: 0
    react/no-find-dom-node: 0
    react/no-did-mount-set-state: 0
    react/require-default-props: 0
    react/no-unused-prop-types: 0
    react/no-multi-comp: 0
    react/no-danger: 0
    react/prop-types: 0
    react/jsx-props-no-spreading: 0
    react/sort-comp: [1, {
      "order": [
        "static-methods",
        "lifecycle",
        "everything-else",
        "render"
      ],
      "groups": {
        "lifecycle": [
          "displayName",
          "propTypes",
          "contextTypes",
          "childContextTypes",
          "mixins",
          "defaultProps",
          "statics",
          "static-variables",
          "getDefaultProps",
          "state",
          "instance-variables",
          "constructor",
          "getInitialState",
          "getChildContext",
          "getDerivedStateFromProps",
          "componentWillMount",
          "UNSAFE_componentWillMount",
          "componentDidMount",
          "UNSAFE_componentWillReceiveProps",
          "UNSAFE_UNSAFE_componentWillReceiveProps",
          "shouldComponentUpdate",
          "componentWillUpdate",
          "UNSAFE_componentWillUpdate",
          "getSnapshotBeforeUpdate",
          "componentDidUpdate",
          "componentDidCatch",
          "componentWillUnmount"
        ]
      }
    }]
